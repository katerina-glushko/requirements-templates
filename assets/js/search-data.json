{
  
  "0": {
    "title": "Example",
    "content": "Note | Доработка с номером PR-3452 на существующее приложение, т.е. не требуется проработка авторизации и ролевой модели Исходник (для текста использован Asciidoc, для диаграмм - PlantUML и шаблон C4) | . [PR-3452] Лента твитов . Table of Contents [PR-3452] Лента твитов 1. Глоссарий | 2. Бизнес требования 2.1. In-scope | 2.2. Out-of-scope | . | 3. To be 3.1. Схема | 3.2. Ограничения/Уточнения | 3.3. Процесс &quot;Получение твитов&quot; | . | 4. Приложения | . | . 1. Глоссарий . Твит в социальной сети Твиттер; вообще короткое сообщение, статус, видимые всем «друзьям» пользователя в социальной сети . 2. Бизнес требования . 2.1. In-scope . 2.2. Out-of-scope . Твиты получаются только при открытии страницы. Пока не производится автоматическое обновление списка твитов. . | Твиты пока не подвергаются автоматической обработке. . | 3. To be . 3.1. Схема . Схема описывает возможный вариант получения списков твитов для сведения Администратора. . 3.2. Ограничения/Уточнения . Пока не продумана обработка rate limits, предполагаем, что Администратор будет в тестовом режиме пользоваться доработкой. . | 3.3. Процесс &quot;Получение твитов&quot; . Администратор открывает страницу со списком твитов в Web Application . | Web Application вызывает API Twitter GET /tweets . | 4. Приложения . API Reference Twitter . | .",
    "url": "https://katerina-glushko.github.io/requirements-templates/templates/vision/",
    "relUrl": "/templates/vision/"
  }
  ,"1": {
    "title": "Example",
    "content": "Note | Документация на сервис с названием &quot;Some service&quot; Исходник (для текста использован Asciidoc, для диаграмм - PlantUML) | . Some service . Table of Contents Some service 1. POST /object - Создать объект 1.1. Алгоритм | 1.2. Request | 1.3. Response | 1.4. Коды ошибок | . | 2. Изменение статуса 2.1. Алгоритм | . | 3. Хранилище сервиса. MongoDB 3.1. Коллекции | 3.2. Структура | . | 4. Конфигурация | . | . 1. POST /object - Создать объект . 1.1. Алгоритм . 1.2. Request . Table 1. Поля тела запроса Path Type Description Required Example . type . | String . | Тип документа . | true . | __ . | . attributes.amount . | Float . | Сумма . | true . | __ . | . attributes.currency . | String . | Валюта . | true . | __ . | . 1.2.1. Example . POST /object HTTP/1.1 Content-Type: text/plain;charset=UTF-8 { &quot;type&quot; : &quot;first&quot;, &quot;attributes&quot;: { &quot;amount&quot;: 1.00, &quot;currency&quot;: &quot;USD&quot; } } . 1.3. Response . Table 2. Ответ при успешном определении настроек: Path Type Description Required Example . id . | Number . | Id нового документа . | true . | 7y8454-34343 . | . 1.3.1. Example . { &quot;id&quot; : &quot;12324&quot; } . 1.4. Коды ошибок . Код Описание . | | . 2. Изменение статуса . 2.1. Алгоритм . 3. Хранилище сервиса. MongoDB . 3.1. Коллекции . objects - сохраненные объекты . 3.1.1. Пример . { &quot;_id&quot;:&quot;5b71597452faff00018ef5fb&quot;, &quot;userId&quot;:&quot;13213&quot;, &quot;createdDate&quot;:&quot;2019-08-13T07:12:04.832Z&quot;, &quot;type&quot; : &quot;first&quot;, &quot;attributes&quot;: { &quot;amount&quot;: 1.00, &quot;currency&quot;: &quot;USD&quot; } } . 3.2. Структура . Table 3. Параметры сохраненного объекта Параметр Тип Описание . _id . | ObjectId . | Идентификатор объекта (автогенерация в БД) . | . createdDate . | Date . | Дата создания попытки подписания. Пример: 2019-08-13T07:12:04.832Z(без таймзоны, т.е. по Гринвичу) . | . userId . | String . | Идентификатор владельца документа . | . type . | String . | Тип объекта . | . attributes.amount . | Float . | Сумма . | . attributes.currency . | String . | Валюта . | . 4. Конфигурация . management: endpoints: web: base-path: /admin spring: data: mongodb: uri: mongodb://localhost:27017/local-test . Table 4. Параметры конфигурации Поле Описание . spring.data.mongodb.uri . | параметры подключения к MongoDB . | .",
    "url": "https://katerina-glushko.github.io/requirements-templates/templates/specs/service/src/docs/",
    "relUrl": "/templates/specs/service/src/docs/"
  }
  ,"2": {
    "title": "Templates",
    "content": "Failed to generate image: Could not find the &#39;mermaid&#39; executable in PATH; add it to the PATH or specify its location using the &#39;mermaid&#39; document attribute graph TD A[Поступление бизнес требований] --&gt;|Выработка концепции| B(Шаблон: Vision) B --&gt; |vision согласован| D{Разработка в&lt;br/&gt;микросервисной&lt;br/&gt;архитектуре?} D --&gt; |да| E(Шаблон: Service spec) B --&gt; |vision согласован| F(Шаблон: Feature spec) click B &quot;https://katerina-glushko.github.io/requirements-templates/templates/vision/vision.html&quot; &quot;Go to vision template&quot; .",
    "url": "https://katerina-glushko.github.io/requirements-templates/templates/",
    "relUrl": "/templates/"
  }
  ,"3": {
    "title": "Getting started",
    "content": "",
    "url": "https://katerina-glushko.github.io/requirements-templates/",
    "relUrl": "/"
  }
  ,"4": {
    "title": "Service specification",
    "content": "Note | Данный формат спецификации предполагает ведение документации рядом с кодом. | . Спецификация на сервис . Этап . В процессе разработки сервиса . | . Описание . Подробное описание функций и параметров сервиса . | . Автор . &#10003; Системный аналитик . | . | . Цель . Постанока задачи на доработку, чтобы . &#10003; Разработчик понимал все детали требуемой доработки . | . Сопроводительное описание сервиса, поддерживаемое в актуальном состоянии, чтобы . &#10003; Support использовал в случае разбора инцидента или необходимости изменить конфигурацию . | &#10003; Системные аналитики разбирались в возможностях сервиса на случай использования или необходимости доработки . | . | . Целевая аудитория . &#10003; Системные администраторы (Support) . | &#10003; Системные аналитики . | &#10003; Разработка . | . | . Структура .",
    "url": "https://katerina-glushko.github.io/requirements-templates/templates/specs/service/service-spec.html",
    "relUrl": "/templates/specs/service/service-spec.html"
  }
  ,"5": {
    "title": "Vision",
    "content": "Note | Данный формат предназначен для предварительной проработки решения по новой доработке | . Vision . Этап . После получения бизнес требований . | . Описание . Предварительное описание вариантов технического решения . | . Автор . &#10003; Архитектор . | &#10003; Системный аналитик . | . | . Цель . Минимальными усилиями зафиксировать возможное решение, чтобы . &#10003; предварительно согласовать с архитекторами . | &#10003; получить предварительные оценки от разработки . | . | . Целевая аудитория . &#10003; Архитекторы . | &#10003; Разработка . | . | . Структура .",
    "url": "https://katerina-glushko.github.io/requirements-templates/templates/vision/vision.html",
    "relUrl": "/templates/vision/vision.html"
  }
  
}